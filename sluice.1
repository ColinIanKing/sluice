.\"                                      Hey, EMACS: -*- nroff -*-
.\" First parameter, NAME, should be all caps
.\" Second parameter, SECTION, should be 1-8, maybe w/ subsection
.\" other parameters are allowed: see man(7), man(1)
.TH SLUICE 1 "December 21, 2014"
.\" Please adjust this date whenever revising the manpage.
.\"
.\" Some roff macros, for reference:
.\" .nh        disable hyphenation
.\" .hy        enable hyphenation
.\" .ad l      left justify
.\" .ad b      justify to both left and right margins
.\" .nf        disable filling
.\" .fi        enable filling
.\" .br        insert line break
.\" .sp <n>    insert n+1 empty lines
.\" for manpage-specific macros, see man(7)
.SH NAME
sluice \- a tool to control data flow at a specified rate
.br

.SH SYNOPSIS
.B sluice
.RI [options]
.br

.SH DESCRIPTION
sluice is a program that reads input on stdin and outputs on stdout at
a specified data rate.

.SH OPTIONS
sluice options are as follow:
.TP
.B \-a
append to file (used in conjunction with the \-t 'tee' option). Instead of creating a new file
or truncating an existing file, this option appends data to the 'tee' file.
.TP
.B \-c delay
define constant delay time (in seconds) between writes. This option enables a constant
time between writes and adjusts the buffer size to try and keep the data rate
constant.  This option is mutually exclusive to the \-i option.  This implicitly
enables the \-o (overflow) and \-u (underflow) buffer management options to
keep the data rate constant.
.TP
.B \-d
discard data, do not copy it to stdout. This makes sluice act as a data sink.
.TP
.B \-f freq
specify the frequency of -v verbose statistics updates. The default is 1/3 of a second.
.TP
.B \-h
show help
.TP
.B \-i size
specify the read/write size, the default size is in bytes, but the K, M, G and T suffixes
can specify size in Kilobytes, Megabytes, Gigabytes and Terabytes respectively. By specifying
a fixed buffer size means that this option is mutually exclusive to the \-c
option.
.TP
.B \-m size
specify amount of data to process, the default size is in bytes, but the K, M, G and T suffixes
can specify size in Kilobytes, Megabytes, Gigabytes and Terabytes respectively.
.TP
.B \-o
detect overflow and re-size read/write buffer size to try and stop overflows. This will
shrink the buffer each time 10 consecutive overflows are detected. The buffer will not
be shrunk any less than 1 byte in size.
.TP
.B \-r rate
specify the data rate in bytes per second. The K, M, G and T suffixes
can specify the rate in Kilobytes/sec, Megabytes/sec, Gigabytes/sec and Terabytes/sec respectively.
.TP
.B \-R
don't read from stdin, instead generate a stream of random data from /dev/urandom.
.TP
.B \-s shift
modify the delay shift. The delay between each write is controlled by modifying the
previous delay by adding or subtracting the previous delay right shifted by the shift
value.  The larger the shift value the longer it takes to adjust up/down to the
specified rate.  The smaller the shift value the quicker it takes, however, this can
result in a highly fluctuating rate because the delay varies by a large amount causing
over overshoot and undershoot.  The default value is 3 and works well for most rates.
.TP
.B \-t file
tee output to the specified file. Output is written to both stdout and to the named file.
.TP
.B \-u
detect underflow and re-size read/write buffer size to try and stop underflows. This will
expand the buffer each time 10 consecutive underflows are detected. The buffer will not
be expanded any more than 4MB in size.
.TP
.B \-v
write verbose statistics to stderr
.TP
.B \-w
warn if a long burst of continuous data rate underflow occurs, the warning is issued just once.  To overcome the underflow increase the \-i read/write buffer size or use the \-u option to auto-expand the read/write buffer.
.TP
.B \-z
don't read from stdin, instead generate a stream of zeros.
.SH EXAMPLES
.LP
Read /dev/zero and write in 4K sizes at the rate of 1MB/sec to the file example.dat
.RS 8
cat /dev/zero | sluice \-i 4K \-r 1M > example.dat
.RE
.LP
Read 32MB from /dev/zero and write at the rate of 64K/sec to stdout with feedback on stderr
.RS 8
cat /dev/zero | sluice \-r 64K \-v \-m 32M
.RE
.LP
Generate a stream of zeros and write at a rate of 1MB/sec to a fifo with underflow and overflow buffer
management
.RS 8
sluice \-z \-u \-o \-r 1MB -d -t myfifo
.RE
.LP
Write random data at 5MB per second to file myfile doing a write every 0.1 seconds
.RS 8
sluice -R -r 5M -c 0.1 > myfile
.RE
.SH AUTHOR
sluice was written by Colin King <colin.king@canonical.com>
.PP
This manual page was written by Colin King <colin.king@canonical.com>,
for the Ubuntu project (but may be used by others).
